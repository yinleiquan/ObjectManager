package com.example.yjlove.objectmanager.greendao.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.example.yjlove.objectmanager.bean.entity.MyObject;
import com.example.yjlove.objectmanager.bean.entity.ObjectType;

import com.example.yjlove.objectmanager.greendao.gen.MyObjectDao;
import com.example.yjlove.objectmanager.greendao.gen.ObjectTypeDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig myObjectDaoConfig;
    private final DaoConfig objectTypeDaoConfig;

    private final MyObjectDao myObjectDao;
    private final ObjectTypeDao objectTypeDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        myObjectDaoConfig = daoConfigMap.get(MyObjectDao.class).clone();
        myObjectDaoConfig.initIdentityScope(type);

        objectTypeDaoConfig = daoConfigMap.get(ObjectTypeDao.class).clone();
        objectTypeDaoConfig.initIdentityScope(type);

        myObjectDao = new MyObjectDao(myObjectDaoConfig, this);
        objectTypeDao = new ObjectTypeDao(objectTypeDaoConfig, this);

        registerDao(MyObject.class, myObjectDao);
        registerDao(ObjectType.class, objectTypeDao);
    }
    
    public void clear() {
        myObjectDaoConfig.getIdentityScope().clear();
        objectTypeDaoConfig.getIdentityScope().clear();
    }

    public MyObjectDao getMyObjectDao() {
        return myObjectDao;
    }

    public ObjectTypeDao getObjectTypeDao() {
        return objectTypeDao;
    }

}
